name: Deploy website
on:
  push:
    branches:
    - main
jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      cache-dir: ${{ steps.get-cache-dir.outputs.dir }}
    steps:
    - name: Get code
      uses: actions/checkout@v3
    - name: Get npm cache directory
      id: get-cache-dir
      run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT ';'
    - name: report cache dir
      run: echo "${{ steps.get-cache-dir.outputs.dir }}"
    - name: list cache directory contents
      run: ls ${{ steps.get-cache-dir.outputs.dir }}
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.get-cache-dir.outputs.dir }}
        key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
    - name: Install dependencies
      run: npm ci
    - name: Lint code
      run: npm run lint
    - name: Test code
      run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publshJSFile.outputs.filename}}
    steps:
    - name: Get code
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: /node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
    - name: Install dependencies
      run: npm ci
    - name: Build website
      run: npm run build
    - name: Publish JS Filename
      id: publshJSFile
      run: find dist/assets/*.js -type f -execdir echo 'filename={}' >> $GITHUB_OUTPUT ';'
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: BuildArtifact
        path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: get build
      uses: actions/download-artifact@v4
      with:
        name: BuildArtifact
    - name: output contents
      run: ls
    - name: output filename
      run: echo "${{ needs.build.outputs.script-file}}"
    - name: Deploy
      run: echo "Deploying..."

#trigger new run
